<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.10.6 on win32)" generated="20220817 22:16:09.734" rpa="false" schemaversion="2">
<suite id="s1" name="test_suit" source="C:\Users\ltmin\zypherbin\ble_test\test_suit.robot">
<kw name="Setup" library="renode-keywords" type="SETUP">
<msg timestamp="20220817 22:16:09.767" level="TRACE">Arguments: [  ]</msg>
<kw name="Evaluate" library="BuiltIn">
<var>${SYSTEM}</var>
<arg>platform.system()</arg>
<arg>modules=platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220817 22:16:09.767" level="TRACE">Arguments: [ 'platform.system()' | modules='platform' ]</msg>
<msg timestamp="20220817 22:16:09.776" level="TRACE">Return: 'Windows'</msg>
<msg timestamp="20220817 22:16:09.776" level="INFO">${SYSTEM} = Windows</msg>
<status status="PASS" starttime="20220817 22:16:09.767" endtime="20220817 22:16:09.776"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${CONFIGURATION}</var>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG}</arg>
<arg>Debug</arg>
<arg>${CONFIGURATION}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220817 22:16:09.777" level="TRACE">Arguments: [ 'not True and False' | 'Debug' | '${CONFIGURATION}' ]</msg>
<msg timestamp="20220817 22:16:09.777" level="TRACE">Return: 'Release'</msg>
<msg timestamp="20220817 22:16:09.777" level="INFO">${CONFIGURATION} = Release</msg>
<status status="PASS" starttime="20220817 22:16:09.777" endtime="20220817 22:16:09.777"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{PARAMS}</var>
<arg>--robot-server-port</arg>
<arg>${PORT_NUMBER}</arg>
<arg>--hide-log</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220817 22:16:09.777" level="TRACE">Arguments: [ '--robot-server-port' | '9999' | '--hide-log' ]</msg>
<msg timestamp="20220817 22:16:09.777" level="TRACE">Return: ['--robot-server-port', '9999', '--hide-log']</msg>
<msg timestamp="20220817 22:16:09.777" level="INFO">@{PARAMS} = [ --robot-server-port | 9999 | --hide-log ]</msg>
<status status="PASS" starttime="20220817 22:16:09.777" endtime="20220817 22:16:09.777"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${DISABLE_XWT}</arg>
<arg>Insert Into List</arg>
<arg>${PARAMS}</arg>
<arg>0</arg>
<arg>--disable-xwt</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:09.777" level="TRACE">Arguments: [ 'False' | 'Insert Into List' | '${PARAMS}' | '0' | '--disable-xwt' ]</msg>
<msg timestamp="20220817 22:16:09.777" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.777" endtime="20220817 22:16:09.777"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER}</arg>
<arg>File Should Exist</arg>
<arg>${DIRECTORY}/${BINARY_NAME}</arg>
<arg>msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:09.778" level="TRACE">Arguments: [ 'not True' | 'File Should Exist' | '${DIRECTORY}/${BINARY_NAME}' | 'msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?' ]</msg>
<msg timestamp="20220817 22:16:09.778" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.777" endtime="20220817 22:16:09.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:09.778" level="TRACE">Arguments: [ "not True and not False and not 'Windows' == 'Windows'" | 'Start Process' | 'mono' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20220817 22:16:09.778" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.778" endtime="20220817 22:16:09.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:09.778" level="TRACE">Arguments: [ "not True and not False and 'Windows' == 'Windows'" | 'Start Process' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' | 'shell=true' ]</msg>
<msg timestamp="20220817 22:16:09.778" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.778" endtime="20220817 22:16:09.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>--debug</arg>
<arg>--debugger-agent\=transport\=dt_socket,address\=0.0.0.0:${SERVER_REMOTE_PORT},server\=y,suspend\=${SERVER_REMOTE_SUSPEND}</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:09.778" level="TRACE">Arguments: [ "not True and False and not 'Windows' == 'Windows'" | 'Start Process' | 'mono' | '--debug' | '--debugger-agent\\=transport\\=dt_socket,address\\=0.0.0.0:${SERVER_REMOTE_PORT},server\\=y,suspend\\=${SERVER_REMOTE_SUSPEND}' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20220817 22:16:09.778" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.778" endtime="20220817 22:16:09.779"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Fatal Error</arg>
<arg>Windows doesn't support server remote debug option.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:09.779" level="TRACE">Arguments: [ "not True and False and 'Windows' == 'Windows'" | 'Fatal Error' | "Windows doesn't support server remote debug option." ]</msg>
<msg timestamp="20220817 22:16:09.779" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.779" endtime="20220817 22:16:09.779"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not '${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:09.779" level="TRACE">Arguments: [ "not 'Windows' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20220817 22:16:09.779" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.779" endtime="20220817 22:16:09.779"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:09.779" level="TRACE">Arguments: [ "'Windows' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://localhost:${PORT_NUMBER}/' ]</msg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<msg timestamp="20220817 22:16:09.779" level="TRACE">Arguments: [ '60s' | '1s' | 'Import Library' | 'Remote' | 'http://localhost:${PORT_NUMBER}/' ]</msg>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220817 22:16:09.780" level="TRACE">Arguments: [ 'Remote' | 'http://localhost:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20220817 22:16:11.431" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.779" endtime="20220817 22:16:11.431"/>
</kw>
<msg timestamp="20220817 22:16:11.431" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.779" endtime="20220817 22:16:11.431"/>
</kw>
<msg timestamp="20220817 22:16:11.431" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.779" endtime="20220817 22:16:11.431"/>
</kw>
<kw name="Set Default Uart Timeout" library="Remote">
<arg>${DEFAULT_UART_TIMEOUT}</arg>
<msg timestamp="20220817 22:16:11.431" level="TRACE">Arguments: [ '8' ]</msg>
<msg timestamp="20220817 22:16:11.443" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:11.431" endtime="20220817 22:16:11.443"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${SAVE_LOG_ON_FAIL}</arg>
<arg>Enable Logging To Cache</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:11.443" level="TRACE">Arguments: [ 'True' | 'Enable Logging To Cache' ]</msg>
<kw name="Enable Logging To Cache" library="Remote">
<msg timestamp="20220817 22:16:11.444" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220817 22:16:11.452" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:11.443" endtime="20220817 22:16:11.452"/>
</kw>
<msg timestamp="20220817 22:16:11.452" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:11.443" endtime="20220817 22:16:11.452"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${allowed_chars}</var>
<arg>abcdefghijklmnopqrstuvwxyz01234567890_-</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220817 22:16:11.452" level="TRACE">Arguments: [ 'abcdefghijklmnopqrstuvwxyz01234567890_-' ]</msg>
<msg timestamp="20220817 22:16:11.453" level="TRACE">Return: 'abcdefghijklmnopqrstuvwxyz01234567890_-'</msg>
<msg timestamp="20220817 22:16:11.453" level="INFO">${allowed_chars} = abcdefghijklmnopqrstuvwxyz01234567890_-</msg>
<status status="PASS" starttime="20220817 22:16:11.452" endtime="20220817 22:16:11.453"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${metrics_fname}</var>
<arg>${SUITE_NAME}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20220817 22:16:11.453" level="TRACE">Arguments: [ 'test_suit' ]</msg>
<msg timestamp="20220817 22:16:11.453" level="TRACE">Return: 'test_suit'</msg>
<msg timestamp="20220817 22:16:11.453" level="INFO">${metrics_fname} = test_suit</msg>
<status status="PASS" starttime="20220817 22:16:11.453" endtime="20220817 22:16:11.453"/>
</kw>
<kw name="Replace String" library="String">
<var>${metrics_fname}</var>
<arg>${metrics_fname}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220817 22:16:11.453" level="TRACE">Arguments: [ 'test_suit' | ' ' | '_' ]</msg>
<msg timestamp="20220817 22:16:11.453" level="TRACE">Return: 'test_suit'</msg>
<msg timestamp="20220817 22:16:11.453" level="INFO">${metrics_fname} = test_suit</msg>
<status status="PASS" starttime="20220817 22:16:11.453" endtime="20220817 22:16:11.453"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${metrics_fname}</var>
<arg>${metrics_fname}</arg>
<arg>[^${allowed_chars}]+</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220817 22:16:11.454" level="TRACE">Arguments: [ 'test_suit' | '[^abcdefghijklmnopqrstuvwxyz01234567890_-]+' | '' ]</msg>
<msg timestamp="20220817 22:16:11.454" level="TRACE">Return: 'test_suit'</msg>
<msg timestamp="20220817 22:16:11.454" level="INFO">${metrics_fname} = test_suit</msg>
<status status="PASS" starttime="20220817 22:16:11.453" endtime="20220817 22:16:11.454"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${metrics_path}</var>
<arg>${RESULTS_DIRECTORY}</arg>
<arg>profiler-${metrics_fname}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20220817 22:16:11.454" level="TRACE">Arguments: [ 'C:\\Users\\ltmin\\zypherbin\\ble_test' | 'profiler-test_suit' ]</msg>
<msg timestamp="20220817 22:16:11.454" level="TRACE">Return: 'C:\\Users\\ltmin\\zypherbin\\ble_test\\profiler-test_suit'</msg>
<msg timestamp="20220817 22:16:11.454" level="INFO">${metrics_path} = C:\Users\ltmin\zypherbin\ble_test\profiler-test_suit</msg>
<status status="PASS" starttime="20220817 22:16:11.454" endtime="20220817 22:16:11.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CREATE_EXECUTION_METRICS}</arg>
<arg>Execute Command</arg>
<arg>EnableProfilerGlobally "${metrics_path}"</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:11.454" level="TRACE">Arguments: [ 'False' | 'Execute Command' | 'EnableProfilerGlobally "${metrics_path}"' ]</msg>
<msg timestamp="20220817 22:16:11.454" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:11.454" endtime="20220817 22:16:11.454"/>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20220817 22:16:11.455" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220817 22:16:11.463" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:11.454" endtime="20220817 22:16:11.463"/>
</kw>
<msg timestamp="20220817 22:16:11.463" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:09.767" endtime="20220817 22:16:11.463"/>
</kw>
<test id="s1-t1" name="Should Run Bluetooth sample">
<kw name="Reset Emulation" library="Remote" type="SETUP">
<msg timestamp="20220817 22:16:11.464" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220817 22:16:11.466" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:11.464" endtime="20220817 22:16:11.466"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>emulation CreateBLEMedium "wireless"</arg>
<msg timestamp="20220817 22:16:11.466" level="TRACE">Arguments: [ 'emulation CreateBLEMedium "wireless"' ]</msg>
<msg timestamp="20220817 22:16:11.629" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:11.466" endtime="20220817 22:16:11.629"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>mach add "central"</arg>
<msg timestamp="20220817 22:16:11.629" level="TRACE">Arguments: [ 'mach add "central"' ]</msg>
<msg timestamp="20220817 22:16:11.651" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:11.629" endtime="20220817 22:16:11.651"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>machine LoadPlatformDescription @platforms/cpus/nrf52840.repl</arg>
<msg timestamp="20220817 22:16:11.651" level="TRACE">Arguments: [ 'machine LoadPlatformDescription @platforms/cpus/nrf52840.repl' ]</msg>
<msg timestamp="20220817 22:16:12.433" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:11.651" endtime="20220817 22:16:12.433"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>sysbus LoadELF @C:/Users/ltmin/zypherbin/zephyr-ble-central_hr.elf</arg>
<msg timestamp="20220817 22:16:12.434" level="TRACE">Arguments: [ 'sysbus LoadELF @C:/Users/ltmin/zypherbin/zephyr-ble-central_hr.elf' ]</msg>
<msg timestamp="20220817 22:16:12.494" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.434" endtime="20220817 22:16:12.494"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>connector Connect sysbus.radio wireless</arg>
<msg timestamp="20220817 22:16:12.495" level="TRACE">Arguments: [ 'connector Connect sysbus.radio wireless' ]</msg>
<msg timestamp="20220817 22:16:12.500" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.494" endtime="20220817 22:16:12.500"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>showAnalyzer ${UART}</arg>
<msg timestamp="20220817 22:16:12.501" level="TRACE">Arguments: [ 'showAnalyzer sysbus.uart0' ]</msg>
<msg timestamp="20220817 22:16:12.507" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.500" endtime="20220817 22:16:12.507"/>
</kw>
<kw name="Create Terminal Tester" library="Remote">
<var>${cen_uart}</var>
<arg>${UART}</arg>
<arg>machine=central</arg>
<msg timestamp="20220817 22:16:12.507" level="TRACE">Arguments: [ 'sysbus.uart0' | 'machine=central' ]</msg>
<msg timestamp="20220817 22:16:12.513" level="TRACE">Return: 0</msg>
<msg timestamp="20220817 22:16:12.514" level="INFO">${cen_uart} = 0</msg>
<status status="PASS" starttime="20220817 22:16:12.507" endtime="20220817 22:16:12.514"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>mach add "peripheral"</arg>
<msg timestamp="20220817 22:16:12.514" level="TRACE">Arguments: [ 'mach add "peripheral"' ]</msg>
<msg timestamp="20220817 22:16:12.515" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.514" endtime="20220817 22:16:12.515"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>mach set "peripheral"</arg>
<msg timestamp="20220817 22:16:12.515" level="TRACE">Arguments: [ 'mach set "peripheral"' ]</msg>
<msg timestamp="20220817 22:16:12.516" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.515" endtime="20220817 22:16:12.516"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>machine LoadPlatformDescription @platforms/cpus/nrf52840.repl</arg>
<msg timestamp="20220817 22:16:12.516" level="TRACE">Arguments: [ 'machine LoadPlatformDescription @platforms/cpus/nrf52840.repl' ]</msg>
<msg timestamp="20220817 22:16:12.598" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.516" endtime="20220817 22:16:12.598"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>sysbus LoadELF @C:/Users/ltmin/zypherbin/zephyr-ble-peripheral_hr.elf</arg>
<msg timestamp="20220817 22:16:12.599" level="TRACE">Arguments: [ 'sysbus LoadELF @C:/Users/ltmin/zypherbin/zephyr-ble-peripheral_hr.elf' ]</msg>
<msg timestamp="20220817 22:16:12.618" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.599" endtime="20220817 22:16:12.618"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>connector Connect sysbus.radio wireless</arg>
<msg timestamp="20220817 22:16:12.618" level="TRACE">Arguments: [ 'connector Connect sysbus.radio wireless' ]</msg>
<msg timestamp="20220817 22:16:12.620" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.618" endtime="20220817 22:16:12.620"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>showAnalyzer ${UART}</arg>
<msg timestamp="20220817 22:16:12.620" level="TRACE">Arguments: [ 'showAnalyzer sysbus.uart0' ]</msg>
<msg timestamp="20220817 22:16:12.621" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.620" endtime="20220817 22:16:12.621"/>
</kw>
<kw name="Create Terminal Tester" library="Remote">
<var>${per_uart}</var>
<arg>${UART}</arg>
<arg>machine=peripheral</arg>
<msg timestamp="20220817 22:16:12.621" level="TRACE">Arguments: [ 'sysbus.uart0' | 'machine=peripheral' ]</msg>
<msg timestamp="20220817 22:16:12.622" level="TRACE">Return: 1</msg>
<msg timestamp="20220817 22:16:12.622" level="INFO">${per_uart} = 1</msg>
<status status="PASS" starttime="20220817 22:16:12.621" endtime="20220817 22:16:12.622"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>emulation SetGlobalQuantum "0.00001"</arg>
<msg timestamp="20220817 22:16:12.623" level="TRACE">Arguments: [ 'emulation SetGlobalQuantum "0.00001"' ]</msg>
<msg timestamp="20220817 22:16:12.631" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.622" endtime="20220817 22:16:12.631"/>
</kw>
<kw name="Start Emulation" library="Remote">
<msg timestamp="20220817 22:16:12.632" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220817 22:16:12.754" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:12.632" endtime="20220817 22:16:12.754"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Booting Zephyr</arg>
<arg>testerId=${cen_uart}</arg>
<msg timestamp="20220817 22:16:12.754" level="TRACE">Arguments: [ 'Booting Zephyr' | 'testerId=0' ]</msg>
<msg timestamp="20220817 22:16:12.762" level="TRACE">Return: {'groups': [],
 'line': '*** Booting Zephyr OS build zephyr-v3.1.0-3584-g6fc4bb948624  ***',
 'timestamp': 0.66}</msg>
<status status="PASS" starttime="20220817 22:16:12.754" endtime="20220817 22:16:12.762"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Booting Zephyr</arg>
<arg>testerId=${per_uart}</arg>
<msg timestamp="20220817 22:16:12.762" level="TRACE">Arguments: [ 'Booting Zephyr' | 'testerId=1' ]</msg>
<msg timestamp="20220817 22:16:12.763" level="TRACE">Return: {'groups': [],
 'line': '*** Booting Zephyr OS build zephyr-v3.1.0-3584-g6fc4bb948624  ***',
 'timestamp': 0.68}</msg>
<status status="PASS" starttime="20220817 22:16:12.762" endtime="20220817 22:16:12.763"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Bluetooth initialized</arg>
<arg>testerId=${cen_uart}</arg>
<msg timestamp="20220817 22:16:12.764" level="TRACE">Arguments: [ 'Bluetooth initialized' | 'testerId=0' ]</msg>
<msg timestamp="20220817 22:16:12.765" level="TRACE">Return: {'groups': [], 'line': 'Bluetooth initialized', 'timestamp': 1.32}</msg>
<status status="PASS" starttime="20220817 22:16:12.763" endtime="20220817 22:16:12.765"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Bluetooth initialized</arg>
<arg>testerId=${per_uart}</arg>
<msg timestamp="20220817 22:16:12.765" level="TRACE">Arguments: [ 'Bluetooth initialized' | 'testerId=1' ]</msg>
<msg timestamp="20220817 22:16:12.768" level="TRACE">Return: {'groups': [], 'line': 'Bluetooth initialized', 'timestamp': 1.35}</msg>
<status status="PASS" starttime="20220817 22:16:12.765" endtime="20220817 22:16:12.768"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Scanning successfully started</arg>
<arg>testerId=${cen_uart}</arg>
<msg timestamp="20220817 22:16:12.768" level="TRACE">Arguments: [ 'Scanning successfully started' | 'testerId=0' ]</msg>
<msg timestamp="20220817 22:16:12.769" level="TRACE">Return: {'groups': [], 'line': 'Scanning successfully started', 'timestamp': 1.45}</msg>
<status status="PASS" starttime="20220817 22:16:12.768" endtime="20220817 22:16:12.769"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Advertising successfully started</arg>
<arg>testerId=${per_uart}</arg>
<msg timestamp="20220817 22:16:12.769" level="TRACE">Arguments: [ 'Advertising successfully started' | 'testerId=1' ]</msg>
<msg timestamp="20220817 22:16:12.770" level="TRACE">Return: {'groups': [], 'line': 'Advertising successfully started', 'timestamp': 1.52}</msg>
<status status="PASS" starttime="20220817 22:16:12.769" endtime="20220817 22:16:12.770"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Connected: C0:00:AA:BB:CC:DD</arg>
<arg>testerId=${cen_uart}</arg>
<msg timestamp="20220817 22:16:12.770" level="TRACE">Arguments: [ 'Connected: C0:00:AA:BB:CC:DD' | 'testerId=0' ]</msg>
<msg timestamp="20220817 22:16:13.108" level="TRACE">Return: {'groups': [],
 'line': 'Connected: C0:00:AA:BB:CC:DD (random)',
 'timestamp': 121.55}</msg>
<status status="PASS" starttime="20220817 22:16:12.770" endtime="20220817 22:16:13.108"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>Connected</arg>
<arg>testerId=${per_uart}</arg>
<msg timestamp="20220817 22:16:13.109" level="TRACE">Arguments: [ 'Connected' | 'testerId=1' ]</msg>
<msg timestamp="20220817 22:16:13.110" level="TRACE">Return: {'groups': [], 'line': 'Connected', 'timestamp': 121.51}</msg>
<status status="PASS" starttime="20220817 22:16:13.108" endtime="20220817 22:16:13.110"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>HRS notifications enabled</arg>
<arg>testerId=${per_uart}</arg>
<msg timestamp="20220817 22:16:13.110" level="TRACE">Arguments: [ 'HRS notifications enabled' | 'testerId=1' ]</msg>
<msg timestamp="20220817 22:16:16.860" level="TRACE">Return: {'groups': [],
 'line': '[00:00:00.606,903] &lt;inf&gt; hrs: HRS notifications enabled',
 'timestamp': 1640.13}</msg>
<status status="PASS" starttime="20220817 22:16:13.110" endtime="20220817 22:16:16.861"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>[SUBSCRIBED]</arg>
<arg>testerId=${cen_uart}</arg>
<msg timestamp="20220817 22:16:16.861" level="TRACE">Arguments: [ '[SUBSCRIBED]' | 'testerId=0' ]</msg>
<msg timestamp="20220817 22:16:16.862" level="TRACE">Return: {'groups': [], 'line': '[SUBSCRIBED]', 'timestamp': 573.74}</msg>
<status status="PASS" starttime="20220817 22:16:16.861" endtime="20220817 22:16:16.862"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>[NOTIFICATION]</arg>
<arg>testerId=${cen_uart}</arg>
<msg timestamp="20220817 22:16:16.863" level="TRACE">Arguments: [ '[NOTIFICATION]' | 'testerId=0' ]</msg>
<msg timestamp="20220817 22:16:16.864" level="TRACE">Return: {'groups': [],
 'line': '[NOTIFICATION] data 0x20005887 length 2',
 'timestamp': 1030.71}</msg>
<status status="PASS" starttime="20220817 22:16:16.862" endtime="20220817 22:16:16.864"/>
</kw>
<kw name="Test Teardown" library="renode-keywords" type="TEARDOWN">
<msg timestamp="20220817 22:16:16.864" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CREATE_SNAPSHOT_ON_FAIL}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Create Snapshot Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:16.864" level="TRACE">Arguments: [ 'True' | 'Run Keyword If Test Failed' | 'Create Snapshot Of Failed Test' ]</msg>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Create Snapshot Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20220817 22:16:16.865" level="TRACE">Arguments: [ 'Create Snapshot Of Failed Test' ]</msg>
<msg timestamp="20220817 22:16:16.865" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.865" endtime="20220817 22:16:16.865"/>
</kw>
<msg timestamp="20220817 22:16:16.865" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.864" endtime="20220817 22:16:16.865"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${SAVE_LOG_ON_FAIL}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Save Log Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:16.865" level="TRACE">Arguments: [ 'True' | 'Run Keyword If Test Failed' | 'Save Log Of Failed Test' ]</msg>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Save Log Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20220817 22:16:16.865" level="TRACE">Arguments: [ 'Save Log Of Failed Test' ]</msg>
<msg timestamp="20220817 22:16:16.865" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.865" endtime="20220817 22:16:16.865"/>
</kw>
<msg timestamp="20220817 22:16:16.865" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.865" endtime="20220817 22:16:16.865"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${res}</var>
<arg>Import Library</arg>
<arg>Dialogs</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<msg timestamp="20220817 22:16:16.865" level="TRACE">Arguments: [ 'Import Library' | 'Dialogs' ]</msg>
<kw name="Import Library" library="BuiltIn">
<arg>Dialogs</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20220817 22:16:16.865" level="TRACE">Arguments: [ 'Dialogs' ]</msg>
<msg timestamp="20220817 22:16:16.875" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.865" endtime="20220817 22:16:16.875"/>
</kw>
<msg timestamp="20220817 22:16:16.875" level="TRACE">Return: ('PASS', None)</msg>
<msg timestamp="20220817 22:16:16.875" level="INFO">${res} = ('PASS', None)</msg>
<status status="PASS" starttime="20220817 22:16:16.865" endtime="20220817 22:16:16.875"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${HOLD_ON_ERROR}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Run Keywords</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' == 'FAIL'</arg>
<arg>Log</arg>
<arg>Couldn't load the Dialogs library - interactive debugging is not possible</arg>
<arg>console=True</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Open GUI</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Pause Execution</arg>
<arg>Test failed. Press OK once done debugging.</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Close GUI</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220817 22:16:16.876" level="TRACE">Arguments: [ 'False' | 'Run Keyword If Test Failed' | 'Run Keywords' | 'Run Keyword If' | "'${res[0]}' == 'FAIL'" | 'Log' | "Couldn't load the Dialogs library - interactive debugging is not possible" | 'console=True' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Open GUI' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Pause Execution' | 'Test failed. Press OK once done debugging.' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Close GUI' ]</msg>
<msg timestamp="20220817 22:16:16.876" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.875" endtime="20220817 22:16:16.876"/>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20220817 22:16:16.876" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220817 22:16:16.893" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:16.876" endtime="20220817 22:16:16.893"/>
</kw>
<kw name="Clear Cached Log" library="Remote">
<msg timestamp="20220817 22:16:16.893" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220817 22:16:16.895" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20220817 22:16:16.893" endtime="20220817 22:16:16.895"/>
</kw>
<msg timestamp="20220817 22:16:16.895" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.864" endtime="20220817 22:16:16.895"/>
</kw>
<status status="PASS" starttime="20220817 22:16:11.463" endtime="20220817 22:16:16.895"/>
</test>
<kw name="Teardown" library="renode-keywords" type="TEARDOWN">
<msg timestamp="20220817 22:16:16.896" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Stop Remote Server</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<msg timestamp="20220817 22:16:16.896" level="TRACE">Arguments: [ 'True' | 'Stop Remote Server' ]</msg>
<msg timestamp="20220817 22:16:16.896" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.896" endtime="20220817 22:16:16.896"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Wait For Process</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<msg timestamp="20220817 22:16:16.897" level="TRACE">Arguments: [ 'True' | 'Wait For Process' ]</msg>
<msg timestamp="20220817 22:16:16.897" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.897" endtime="20220817 22:16:16.897"/>
</kw>
<msg timestamp="20220817 22:16:16.897" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220817 22:16:16.896" endtime="20220817 22:16:16.897"/>
</kw>
<meta name="HotSpot_Action">-</meta>
<status status="PASS" starttime="20220817 22:16:09.736" endtime="20220817 22:16:16.897"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="test_suit">test_suit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
